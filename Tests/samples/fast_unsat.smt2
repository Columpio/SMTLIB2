(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-datatypes ((E_0 0)) (((N_0 (projN_0 Nat_0)) (Add_0 (projAdd_0 E_0) (projAdd_0 E_0)) (Mul_0 (projMul_0 E_0) (projMul_1 E_0)) (Eq_0 (projEq_0 E_0) (projEq_1 E_0)) (V_0 (projV_0 Nat_0)))))
(declare-datatypes ((P_0 0) (list_1 0)) (((Print_0 (projPrint_0 E_0)) (x_0 (proj_0 Nat_0) (proj_1 E_0)) (While_0 (projWhile_0 E_0) (projWhile_1 list_1)) (If_0 (projIf_0 E_0) (projIf_1 list_1) (projIf_2 list_1))) ((nil_1 ) (cons_1 (head_1 P_0) (tail_1 list_1)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun store_0 (list_0 list_0 Nat_0 Nat_0) Bool)
(declare-fun fetch_0 (Nat_0 list_0 Nat_0) Bool)
(declare-fun eval_0 (Nat_0 list_0 E_0) Bool)
(declare-fun x_1 (list_1 list_1 list_1) Bool)
(declare-fun opti_0 (P_0 P_0) Bool)
(declare-fun run_0 (list_0 list_0 list_1) Bool)
(assert (forall ((x_2 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_2))))
(assert (forall ((x_3 Nat_0))
	(diseqNat_0 (S_0 x_3) Z_0)))
(assert (forall ((x_4 Nat_0) (x_5 Nat_0))
	(=> (diseqNat_0 x_4 x_5) (diseqNat_0 (S_0 x_4) (S_0 x_5)))))
(assert (forall ((y_0 Nat_0))
	(add_0 y_0 Z_0 y_0)))
(assert (forall ((r_0 Nat_0) (x_6 Nat_0) (y_1 Nat_0))
	(=> (add_0 r_0 x_6 y_1) (add_0 (S_0 r_0) (S_0 x_6) y_1))))
(assert (forall ((y_2 Nat_0))
	(minus_0 Z_0 Z_0 y_2)))
(assert (forall ((r_1 Nat_0) (x_7 Nat_0) (y_3 Nat_0))
	(=> (minus_0 r_1 x_7 y_3) (minus_0 (S_0 r_1) (S_0 x_7) y_3))))
(assert (forall ((y_4 Nat_0))
	(mult_0 Z_0 Z_0 y_4)))
(assert (forall ((r_2 Nat_0) (x_8 Nat_0) (y_5 Nat_0) (z_2 Nat_0))
	(=> (and (mult_0 r_2 x_8 y_5) (add_0 z_2 r_2 y_5)) (mult_0 z_2 (S_0 x_8) y_5))))
(assert (forall ((x_9 Nat_0) (x_10 list_0))
	(diseqlist_0 nil_0 (cons_0 x_9 x_10))))
(assert (forall ((x_11 Nat_0) (x_12 list_0))
	(diseqlist_0 (cons_0 x_11 x_12) nil_0)))
(assert (forall ((x_13 Nat_0) (x_14 list_0) (x_15 Nat_0) (x_16 list_0))
	(=> (diseqNat_0 x_13 x_15) (diseqlist_0 (cons_0 x_13 x_14) (cons_0 x_15 x_16)))))
(assert (forall ((x_17 Nat_0) (x_18 list_0) (x_19 Nat_0) (x_20 list_0))
	(=> (diseqlist_0 x_18 x_20) (diseqlist_0 (cons_0 x_17 x_18) (cons_0 x_19 x_20)))))
(assert (forall ((n_1 Nat_0) (st_0 list_0) (z_3 Nat_0))
	(store_0 (cons_0 z_3 st_0) (cons_0 n_1 st_0) Z_0 z_3)))
(assert (forall ((x_21 Nat_0) (x_22 list_0) (n_2 Nat_0) (st_1 list_0) (y_6 Nat_0) (z_4 Nat_0))
	(=> (and (diseqNat_0 y_6 Z_0) (store_0 x_22 st_1 x_21 z_4) (minus_0 x_21 y_6 (S_0 Z_0))) (store_0 (cons_0 n_2 x_22) (cons_0 n_2 st_1) y_6 z_4))))
(assert (forall ((z_5 Nat_0))
	(store_0 (cons_0 z_5 nil_0) nil_0 Z_0 z_5)))
(assert (forall ((x_23 Nat_0) (x_24 list_0) (y_7 Nat_0) (z_6 Nat_0))
	(=> (and (diseqNat_0 y_7 Z_0) (store_0 x_24 nil_0 x_23 z_6) (minus_0 x_23 y_7 (S_0 Z_0))) (store_0 (cons_0 Z_0 x_24) nil_0 y_7 z_6))))
(assert (forall ((n_3 Nat_0) (st_2 list_0))
	(fetch_0 n_3 (cons_0 n_3 st_2) Z_0)))
(assert (forall ((x_25 Nat_0) (x_26 Nat_0) (n_4 Nat_0) (st_3 list_0) (y_8 Nat_0))
	(=> (and (diseqNat_0 y_8 Z_0) (fetch_0 x_26 st_3 x_25) (minus_0 x_25 y_8 (S_0 Z_0))) (fetch_0 x_26 (cons_0 n_4 st_3) y_8))))
(assert (forall ((y_9 Nat_0))
	(fetch_0 Z_0 nil_0 y_9)))
(assert (forall ((x_27 Nat_0) (z_7 Nat_0) (x_28 list_0))
	(=> (fetch_0 x_27 x_28 z_7) (eval_0 x_27 x_28 (V_0 z_7)))))
(assert (forall ((x_29 Nat_0) (a_0 E_0) (b_0 E_0) (x_30 list_0))
	(=> (and (eval_0 x_29 x_30 a_0) (eval_0 x_29 x_30 b_0)) (eval_0 (S_0 Z_0) x_30 (Eq_0 a_0 b_0)))))
(assert (forall ((x_31 Nat_0) (x_32 Nat_0) (a_1 E_0) (b_1 E_0) (x_33 list_0))
	(=> (and (diseqNat_0 x_31 x_32) (eval_0 x_31 x_33 a_1) (eval_0 x_32 x_33 b_1)) (eval_0 Z_0 x_33 (Eq_0 a_1 b_1)))))
(assert (forall ((x_34 Nat_0) (x_35 Nat_0) (x_36 Nat_0) (c_0 E_0) (b_2 E_0) (x_37 list_0))
	(=> (and (eval_0 x_35 x_37 c_0) (eval_0 x_36 x_37 b_2) (mult_0 x_34 x_35 x_36)) (eval_0 x_34 x_37 (Mul_0 c_0 b_2)))))
(assert (forall ((x_38 Nat_0) (x_39 Nat_0) (x_40 Nat_0) (a_2 E_0) (b_3 E_0) (x_41 list_0))
	(=> (and (eval_0 x_39 x_41 a_2) (eval_0 x_40 x_41 b_3) (add_0 x_38 x_39 x_40)) (eval_0 x_38 x_41 (Add_0 a_2 b_3)))))
(assert (forall ((n_5 Nat_0) (x_42 list_0))
	(eval_0 n_5 x_42 (N_0 n_5))))
(assert (forall ((x_43 list_1) (z_8 P_0) (xs_0 list_1) (y_10 list_1))
	(=> (x_1 x_43 xs_0 y_10) (x_1 (cons_1 z_8 x_43) (cons_1 z_8 xs_0) y_10))))
(assert (forall ((x_44 list_1))
	(x_1 x_44 nil_1 x_44)))
(assert (forall ((c_1 E_0) (q_0 list_1) (r_3 list_1))
	(opti_0 (If_0 c_1 r_3 q_0) (If_0 c_1 q_0 r_3))))
(assert (forall ((x_45 list_1) (e_1 E_0) (p_1 list_1))
	(=> (x_1 x_45 p_1 p_1) (opti_0 (While_0 e_1 x_45) (While_0 e_1 p_1)))))
(assert (forall ((x_46 P_0) (x_47 E_0))
	(opti_0 (Print_0 x_47) (Print_0 x_47))))
(assert (forall ((x_48 P_0) (x_49 Nat_0) (x_50 E_0))
	(opti_0 (x_0 x_49 x_50) (x_0 x_49 x_50))))
(assert (forall ((x_51 list_0) (x_52 list_1) (e_2 E_0) (q_1 list_1) (q_2 list_1) (r_4 list_1) (x_53 list_0))
	(=> (and (x_1 x_52 q_2 r_4) (run_0 x_51 x_53 x_52) (eval_0 Z_0 x_53 e_2)) (run_0 x_51 x_53 (cons_1 (If_0 e_2 q_1 q_2) r_4)))))
(assert (forall ((x_54 list_0) (x_55 list_1) (x_56 Nat_0) (e_3 E_0) (q_3 list_1) (q_4 list_1) (r_5 list_1) (x_57 list_0))
	(=> (and (diseqNat_0 x_56 Z_0) (x_1 x_55 q_3 r_5) (run_0 x_54 x_57 x_55) (eval_0 x_56 x_57 e_3)) (run_0 x_54 x_57 (cons_1 (If_0 e_3 q_3 q_4) r_5)))))
(assert (forall ((x_58 list_0) (x_59 list_1) (e_4 E_0) (p_2 list_1) (r_6 list_1) (x_60 list_0))
	(=> (and (x_1 x_59 p_2 (cons_1 (While_0 e_4 p_2) nil_1)) (run_0 x_58 x_60 (cons_1 (If_0 e_4 x_59 nil_1) r_6))) (run_0 x_58 x_60 (cons_1 (While_0 e_4 p_2) r_6)))))
(assert (forall ((x_61 list_0) (x_62 Nat_0) (x_63 list_0) (x_64 Nat_0) (e_5 E_0) (r_7 list_1) (x_65 list_0))
	(=> (and (eval_0 x_62 x_65 e_5) (store_0 x_63 x_65 x_64 x_62) (run_0 x_61 x_63 r_7)) (run_0 x_61 x_65 (cons_1 (x_0 x_64 e_5) r_7)))))
(assert (forall ((x_66 Nat_0) (x_67 list_0) (e_6 E_0) (r_8 list_1) (x_68 list_0))
	(=> (and (eval_0 x_66 x_68 e_6) (run_0 x_67 x_68 r_8)) (run_0 (cons_0 x_66 x_67) x_68 (cons_1 (Print_0 e_6) r_8)))))
(assert (forall ((x_69 list_0))
	(run_0 nil_0 x_69 nil_1)))
(assert (forall ((x_70 list_0) (x_71 P_0) (x_72 list_0) (p_3 P_0))
	(=> (and (diseqlist_0 x_70 x_72) (run_0 x_70 nil_0 (cons_1 p_3 nil_1)) (opti_0 x_71 p_3) (run_0 x_72 nil_0 (cons_1 x_71 nil_1))) false)))
(check-sat)
(get-model)
