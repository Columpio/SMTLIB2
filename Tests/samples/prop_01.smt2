(set-logic UF)
(declare-sort Nat_0 0)
(declare-fun Z_0 () Nat_0)
(declare-fun Z_1 (Nat_0) Nat_0)
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-sort list_0 0)
(declare-fun nil_0 () list_0)
(declare-fun cons_0 (Nat_0 list_0) list_0)
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-sort Nat_1 0)
(declare-fun Z_2 () Nat_1)
(declare-fun S_0 (Nat_1) Nat_1)
(declare-fun take_0 (list_0 Nat_1 list_0) Bool)
(declare-fun drop_0 (list_0 Nat_1 list_0) Bool)
(declare-fun x_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_1 Nat_0))
	(diseqNat_0 Z_0 (Z_1 x_1))))
(assert (forall ((x_2 Nat_0))
	(diseqNat_0 (Z_1 x_2) Z_0)))
(assert (forall ((x_3 Nat_0) (x_4 Nat_0))
	(=> (diseqNat_0 x_3 x_4) (diseqNat_0 (Z_1 x_3) (Z_1 x_4)))))
(assert (forall ((x_5 Nat_0) (x_6 list_0))
	(diseqlist_0 nil_0 (cons_0 x_5 x_6))))
(assert (forall ((x_7 Nat_0) (x_8 list_0))
	(diseqlist_0 (cons_0 x_7 x_8) nil_0)))
(assert (forall ((x_9 Nat_0) (x_10 list_0) (x_11 Nat_0) (x_12 list_0))
	(=> (diseqNat_0 x_9 x_11) (diseqlist_0 (cons_0 x_9 x_10) (cons_0 x_11 x_12)))))
(assert (forall ((x_13 Nat_0) (x_14 list_0) (x_15 Nat_0) (x_16 list_0))
	(=> (diseqlist_0 x_14 x_16) (diseqlist_0 (cons_0 x_13 x_14) (cons_0 x_15 x_16)))))
(assert (forall ((x_17 list_0) (x_18 Nat_0) (x_19 list_0) (z_3 Nat_1))
	(=> (take_0 x_17 z_3 x_19) (take_0 (cons_0 x_18 x_17) (S_0 z_3) (cons_0 x_18 x_19)))))
(assert (forall ((z_4 Nat_1))
	(take_0 nil_0 (S_0 z_4) nil_0)))
(assert (forall ((y_0 list_0))
	(take_0 nil_0 Z_2 y_0)))
(assert (forall ((x_20 list_0) (x_21 Nat_0) (x_22 list_0) (z_5 Nat_1))
	(=> (drop_0 x_20 z_5 x_22) (drop_0 x_20 (S_0 z_5) (cons_0 x_21 x_22)))))
(assert (forall ((z_6 Nat_1))
	(drop_0 nil_0 (S_0 z_6) nil_0)))
(assert (forall ((x_23 list_0))
	(drop_0 x_23 Z_2 x_23)))
(assert (forall ((x_24 list_0) (z_7 Nat_0) (xs_0 list_0) (y_1 list_0))
	(=> (x_0 x_24 xs_0 y_1) (x_0 (cons_0 z_7 x_24) (cons_0 z_7 xs_0) y_1))))
(assert (forall ((x_25 list_0))
	(x_0 x_25 nil_0 x_25)))
(assert (forall ((x_26 list_0) (x_27 list_0) (x_28 list_0) (n_0 Nat_1) (xs_1 list_0))
	(=> (and (diseqlist_0 x_28 xs_1) (take_0 x_26 n_0 xs_1) (drop_0 x_27 n_0 xs_1) (x_0 x_28 x_26 x_27)) false)))
(check-sat)
(get-model)
